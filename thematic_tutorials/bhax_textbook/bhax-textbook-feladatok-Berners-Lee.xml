<chapter xmlns="http://docbook.org/ns/docbook" 
    xmlns:xlink="http://www.w3.org/1999/xlink" 
    xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Berners-Lee!</title>
    </info>

    <para>C++: Benedek Zoltán, Levendovszky Tihamér Szoftverfejlesztés C++ nyelven</para>
    <para>Java: Nyékyné Dr. Gaizler Judit et al. Java 2 útikalauz programozóknak 5.0 I-II.</para>
    <para>Python: Forstner Bertalan, Ekler Péter, Kelényi Imre: Bevezetés a mobilprogramozásba. Gyors prototípus-fejlesztés Python és Java nyelven (35-51 oldal)</para>


    <section>
        <title>1.hét Az objektumorientált paradigma alapfoglamai.</title>
        <para>Osztály,objektum, példányosítás.</para>
        <para>
            Egy osztály azonos típusú dolgok modelljét írja le. A dolgok lehetnek a létező világ objektumai vagy 
            programok belső világához tartozó absztrakt objektumok is, például adatszerkezetek.
            Működés során az osztályokat példányosítjuk, objektumot hozunk létre, egy osztályból többet is. 
            Az objektum saját állapottal rendelkezik, ami műveletek hatására változhat.
            Az osztályokat két részből álló osztálydefiníció határozza meg. Az egyik rész deklarálja az objektum állapotát leíró változókat, 
            amiket példányváltozónak nevezünk. A másik rész pedig a metódusokat, függvényeket tartalmazza, amik az objektum viselkedését, 
            műveleteit határozza meg. A metódus meghívásakor meg kell adni melyik objektumra szeretnénk meghívni.
            Az objektumok fontos tulajdonsága az adatok elrejtése más osztályok, objektumok elől és az egységbezárás amit együtt
            adatabsztrakciónak nevezünk.
        </para>
    </section>
</chapter>                
